$schema: https://json-schema.org/draft/2020-12/schema
$id: https://canonical-grounding.org/schemas/ddd/strategic/v1
title: DDD Strategic Patterns Schema
description: Strategic patterns for Domain-Driven Design - domains, bounded contexts, context mappings

metadata:
  author: "Marina Music"
  created: "2025-10-04"
  updated: "2025-10-17"
  license: "MIT"
  version: "1.0.0"
  partition: "strategic"
  references:
    - "Eric Evans - Domain-Driven Design (2003)"
    - "Vaughn Vernon - Implementing Domain-Driven Design (2013)"
    - "Martin Fowler - Patterns of Enterprise Application Architecture (2002)"

naming_conventions:
  domain_id: "dom_<name>"
  bounded_context_id: "bc_<name>"
  context_mapping_id: "cm_<source>_to_<target>"

$defs:
  system:
    type: object
    description: The entire software system being modeled
    required: [id, name, domains]
    properties:
      id:
        type: string
        description: Unique system identifier
      name:
        type: string
        description: System name
      description:
        type: string
        description: What this system does
      version:
        type: string
        description: System version
      domains:
        type: array
        description: All domains in the system
        items:
          type: string
          pattern: "^dom_[a-z0-9_]+$"
      bounded_contexts:
        type: array
        description: All bounded contexts in system
        items:
          type: string
          pattern: "^bc_[a-z0-9_]+$"
      context_mappings:
        type: array
        description: Relationships between bounded contexts
        items:
          type: string
          pattern: "^cm_[a-z0-9_]+_to_[a-z0-9_]+$"

  domain:
    type: object
    description: A sphere of knowledge and activity around which the system is organized
    required: [id, name, type]
    properties:
      id:
        type: string
        pattern: "^dom_[a-z0-9_]+$"
        description: Unique domain identifier
      name:
        type: string
        description: Domain name from ubiquitous language
      type:
        type: string
        enum: [core, supporting, generic]
        description: Domain classification
      description:
        type: string
        description: What this domain encompasses
      strategic_importance:
        type: string
        enum: [critical, important, standard, low]
        description: Business importance level
      bounded_contexts:
        type: array
        description: Bounded contexts within this domain (IDs)
        items:
          type: string
          pattern: "^bc_[a-z0-9_]+$"
      investment_strategy:
        type: string
        description: How much to invest (best team, adequate, minimal, outsource)
      notes:
        type: string
        description: Additional context about this domain

  bounded_context:
    type: object
    description: Explicit boundary within which a domain model is defined and applicable
    required: [id, name, domain_ref]
    properties:
      id:
        type: string
        pattern: "^bc_[a-z0-9_]+$"
        description: Unique bounded context identifier
      name:
        type: string
        description: Context name from ubiquitous language
      domain_ref:
        type: string
        pattern: "^dom_[a-z0-9_]+$"
        description: Parent domain (ID reference)
      description:
        type: string
        description: Purpose and scope of this context
      ubiquitous_language:
        type: object
        description: Key terms and definitions specific to this context
        properties:
          glossary:
            type: array
            items:
              type: object
              required: [term, definition]
              properties:
                term:
                  type: string
                definition:
                  type: string
                examples:
                  type: array
                  items:
                    type: string
      team_ownership:
        type: string
        description: Team responsible for this context
      aggregates:
        type: array
        description: Aggregates in this context (IDs from tactical schema)
        items:
          type: string
          pattern: "^agg_[a-z0-9_]+$"
      repositories:
        type: array
        description: Repositories in this context (IDs from tactical schema)
        items:
          type: string
          pattern: "^repo_[a-z0-9_]+$"
      domain_services:
        type: array
        description: Domain services in this context (IDs from tactical schema)
        items:
          type: string
          pattern: "^svc_dom_[a-z0-9_]+$"
      application_services:
        type: array
        description: Application services in this context (IDs from tactical schema)
        items:
          type: string
          pattern: "^svc_app_[a-z0-9_]+$"
      domain_events:
        type: array
        description: Domain events published by this context (IDs from tactical schema)
        items:
          type: string
          pattern: "^evt_[a-z0-9_]+$"

  context_mapping:
    type: object
    description: Relationship between two bounded contexts
    required: [id, upstream_context, downstream_context, relationship_type]
    properties:
      id:
        type: string
        pattern: "^cm_[a-z0-9_]+_to_[a-z0-9_]+$"
        description: Unique mapping identifier
      upstream_context:
        type: string
        pattern: "^bc_[a-z0-9_]+$"
        description: Context that influences (ID reference)
      downstream_context:
        type: string
        pattern: "^bc_[a-z0-9_]+$"
        description: Context that is influenced (ID reference)
      relationship_type:
        type: string
        enum:
          - partnership
          - shared_kernel
          - customer_supplier
          - conformist
          - anti_corruption_layer
          - open_host_service
          - published_language
          - separate_ways
          - big_ball_of_mud
        description: Type of relationship between contexts
      integration_pattern:
        type: string
        description: How integration is implemented (REST API, messaging, shared DB, etc.)
      translation_map:
        type: object
        description: How concepts translate between contexts
      shared_elements:
        type: array
        description: For shared kernel - what is shared
        items:
          type: string
      acl_details:
        type: object
        description: For anti-corruption layer - implementation details
        properties:
          facades:
            type: array
            items:
              type: string
          adapters:
            type: array
            items:
              type: string
          translators:
            type: array
            items:
              type: string
      notes:
        type: string
        description: Additional context about this mapping

validation_rules:
  - rule: "bounded_context_has_domain"
    description: "Every bounded context must belong to exactly one domain"
    validation: "bounded_context.domain_ref must be set and valid"

  - rule: "context_mapping_different_contexts"
    description: "Context mapping must connect two different bounded contexts"
    validation: "context_mapping.upstream_context != context_mapping.downstream_context"

best_practices:
  strategic:
    - "Start by identifying domains and subdomains"
    - "Define bounded contexts based on linguistic boundaries"
    - "Use context mapping to make integration explicit"
    - "Invest most in core domain"
    - "Buy or outsource generic subdomains"
